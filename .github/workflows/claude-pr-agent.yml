name: Claude PR Agent

on:
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_review_comment:
    types: [created]
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write
  issues: write
  checks: read

jobs:
  claude-review:
    name: Claude AI Code Review
    runs-on: ubuntu-latest

    # Only run on PRs or when @claude is mentioned
    if: |
      github.event_name == 'pull_request' ||
      (github.event_name == 'issue_comment' &&
       github.event.issue.pull_request &&
       contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' &&
       contains(github.event.comment.body, '@claude'))

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Get PR details
        id: pr
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8
        with:
          script: |
            let pr;
            if (context.eventName === 'pull_request') {
              pr = context.payload.pull_request;
            } else if (context.eventName === 'issue_comment' || context.eventName === 'pull_request_review_comment') {
              const prNumber = context.payload.issue?.number || context.payload.pull_request?.number;
              const { data } = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prNumber
              });
              pr = data;
            }

            core.setOutput('number', pr.number);
            core.setOutput('title', pr.title);
            core.setOutput('author', pr.user.login);
            core.setOutput('base', pr.base.ref);
            core.setOutput('head', pr.head.ref);

            // Check if this is a Renovate PR
            const isRenovate = pr.user.login === 'renovate[bot]';
            core.setOutput('is_renovate', isRenovate);

            // Get PR labels
            const labels = pr.labels.map(l => l.name).join(',');
            core.setOutput('labels', labels);

      - name: Get changed files
        id: files
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8
        with:
          script: |
            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ steps.pr.outputs.number }}
            });

            const dockerfiles = files.filter(f =>
              f.filename.includes('Dockerfile') ||
              f.filename.includes('docker-compose')
            ).map(f => f.filename);

            const workflows = files.filter(f =>
              f.filename.startsWith('.github/workflows/')
            ).map(f => f.filename);

            const renovateJson = files.filter(f =>
              f.filename.includes('renovate.json')
            ).map(f => f.filename);

            core.setOutput('has_dockerfile', dockerfiles.length > 0);
            core.setOutput('has_workflow', workflows.length > 0);
            core.setOutput('has_renovate_config', renovateJson.length > 0);
            core.setOutput('total_changes', files.length);

      - name: Setup Python for Claude SDK
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6
        with:
          python-version: '3.11'

      - name: Install Claude SDK
        run: |
          pip install anthropic requests PyGithub

      - name: Claude Code Review
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ steps.pr.outputs.number }}
          PR_TITLE: ${{ steps.pr.outputs.title }}
          PR_AUTHOR: ${{ steps.pr.outputs.author }}
          PR_LABELS: ${{ steps.pr.outputs.labels }}
          IS_RENOVATE: ${{ steps.pr.outputs.is_renovate }}
          HAS_DOCKERFILE: ${{ steps.files.outputs.has_dockerfile }}
          HAS_WORKFLOW: ${{ steps.files.outputs.has_workflow }}
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          python .github/scripts/claude_review.py

      - name: Auto-approve safe updates
        if: |
          steps.pr.outputs.is_renovate == 'true' &&
          (contains(steps.pr.outputs.labels, 'automerge') ||
           contains(steps.pr.outputs.labels, 'security'))
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8
        with:
          script: |
            // Check if Claude approved the changes
            const fs = require('fs');
            let shouldApprove = false;

            if (fs.existsSync('/tmp/claude_approval.txt')) {
              const approval = fs.readFileSync('/tmp/claude_approval.txt', 'utf8');
              shouldApprove = approval.includes('APPROVE');
            }

            if (shouldApprove) {
              await github.rest.pulls.createReview({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: ${{ steps.pr.outputs.number }},
                event: 'APPROVE',
                body: 'âœ… Auto-approved by Claude AI agent.\n\n' +
                      'This PR passed automated security and quality checks:\n' +
                      '- No critical security issues detected\n' +
                      '- Code follows best practices\n' +
                      '- Safe for auto-merge'
              });
              console.log('PR auto-approved by Claude');
            }

  claude-implement:
    name: Claude AI Feature Implementation
    runs-on: ubuntu-latest

    # Only run when issue is labeled with 'claude-implement'
    if: |
      github.event_name == 'issues' &&
      github.event.action == 'labeled' &&
      github.event.label.name == 'claude-implement'

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6
        with:
          python-version: '3.11'

      - name: Install Claude SDK
        run: |
          pip install anthropic requests PyGithub

      - name: Claude Implement Feature
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_BODY: ${{ github.event.issue.body }}
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          python .github/scripts/claude_implement.py

      - name: Create Pull Request
        if: success()
        uses: peter-evans/create-pull-request@c5a7806660adbe173f04e3e038b0ccdcd758773c # v7.0.5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'feat: implement #${{ github.event.issue.number }}'
          branch: claude/issue-${{ github.event.issue.number }}
          title: 'feat: ${{ github.event.issue.title }}'
          body: |
            ðŸ¤– **Auto-generated by Claude AI Agent**

            This PR implements the feature requested in #${{ github.event.issue.number }}.

            **Changes made:**
            - Analyzed the issue requirements
            - Implemented the requested functionality
            - Added/updated relevant documentation
            - Ensured code follows repository standards

            **Testing:**
            Please review the changes and run appropriate tests before merging.

            Closes #${{ github.event.issue.number }}
          labels: |
            claude-generated
            needs-review
